// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using KnoWhy.Model;
using UIKit;

namespace KnoWhy.iOS.Base.lproj
{
	public partial class ListBooks : UITableViewController
	{
		public ListBooks (IntPtr handle) : base (handle)
		{
		}

        public override void ViewDidAppear(bool animated)
        {
            base.ViewDidAppear(animated);
        }

        public override nint NumberOfSections(UITableView tableView)
        {
            return 1;
        }

        public override nint RowsInSection(UITableView tableView, nint section)
        {
            return KnoWhy.Current.booksList.Count;
        }

        public override UITableViewCell GetCell(UITableView tableView, NSIndexPath indexPath)
        {
            UITableViewCell cell = tableView.DequeueReusableCell("cell");

            if (indexPath.Row <= 16) {
                Books book = KnoWhy.Current.booksList.ToArray()[indexPath.Row];
                cell.TextLabel.Text = book.name;

                if (KnoWhy.Current.filterBookId == indexPath.Row) {
                    cell.Accessory = UITableViewCellAccessory.Checkmark;
                } else {
                    cell.Accessory = UITableViewCellAccessory.None;
                }
            }

            return cell;
        }

        public override void RowSelected(UITableView tableView, NSIndexPath indexPath)
        {
            //base.RowSelected(tableView, indexPath);

            var parent = this.ParentViewController;

            if (KnoWhy.Current.filterBookId != indexPath.Row) {
                KnoWhy.Current.filterBookId = indexPath.Row;
                KnoWhy.Current.filterChapterId = 0;
            }

            tableView.ReloadData();

            if (KnoWhy.Current.SortAndFilterInterface != null) {
                KnoWhy.Current.SortAndFilterInterface.reloadData();
                this.ParentViewController.NavigationController.PopViewController(true);
            } else {
                KnoWhy.Current.reorder();
                KnoWhy.Current.toggleFilterMode();
            }
        }
	}
}
