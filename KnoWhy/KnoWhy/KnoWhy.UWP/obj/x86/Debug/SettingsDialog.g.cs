#pragma checksum "C:\Users\j_rob\Desktop\KnoWhy\KnoWhy\KnoWhy.UWP\SettingsDialog.xaml" "{406ea660-64cf-4c82-b6f0-42d48172a799}" "2EDAFAEE12C03B604D5BE7755E251C62"
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KnoWhy.UWP
{
    partial class SettingsDialog : 
        global::Windows.UI.Xaml.Controls.ContentDialog, 
        global::Windows.UI.Xaml.Markup.IComponentConnector,
        global::Windows.UI.Xaml.Markup.IComponentConnector2
    {
        internal class XamlBindingSetters
        {
            public static void Set_Windows_UI_Xaml_Controls_ContentDialog_PrimaryButtonText(global::Windows.UI.Xaml.Controls.ContentDialog obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.PrimaryButtonText = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_ContentDialog_Title(global::Windows.UI.Xaml.Controls.ContentDialog obj, global::System.Object value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Object) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Object), targetNullValue);
                }
                obj.Title = value;
            }
            public static void Set_Windows_UI_Xaml_Controls_TextBlock_Text(global::Windows.UI.Xaml.Controls.TextBlock obj, global::System.String value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = targetNullValue;
                }
                obj.Text = value ?? global::System.String.Empty;
            }
            public static void Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(global::Windows.UI.Xaml.Controls.Primitives.ToggleButton obj, global::System.Nullable<global::System.Boolean> value, string targetNullValue)
            {
                if (value == null && targetNullValue != null)
                {
                    value = (global::System.Nullable<global::System.Boolean>) global::Windows.UI.Xaml.Markup.XamlBindingHelper.ConvertValue(typeof(global::System.Nullable<global::System.Boolean>), targetNullValue);
                }
                obj.IsChecked = value;
            }
        };

        private class SettingsDialog_obj1_Bindings :
            global::Windows.UI.Xaml.Markup.IComponentConnector,
            ISettingsDialog_Bindings
        {
            private global::KnoWhy.UWP.SettingsDialog dataRoot;
            private bool initialized = false;
            private const int NOT_PHASED = (1 << 31);
            private const int DATA_CHANGED = (1 << 30);

            // Fields for each control that has bindings.
            private global::System.WeakReference obj1;
            private global::Windows.UI.Xaml.Controls.TextBlock obj4;
            private global::Windows.UI.Xaml.Controls.TextBlock obj5;
            private global::Windows.UI.Xaml.Controls.TextBlock obj6;
            private global::Windows.UI.Xaml.Controls.TextBlock obj7;
            private global::Windows.UI.Xaml.Controls.TextBlock obj8;
            private global::Windows.UI.Xaml.Controls.TextBlock obj9;
            private global::Windows.UI.Xaml.Controls.TextBlock obj10;
            private global::Windows.UI.Xaml.Controls.TextBlock obj11;
            private global::Windows.UI.Xaml.Controls.TextBlock obj12;
            private global::Windows.UI.Xaml.Controls.CheckBox obj13;

            private SettingsDialog_obj1_BindingsTracking bindingsTracking;

            public SettingsDialog_obj1_Bindings()
            {
                this.bindingsTracking = new SettingsDialog_obj1_BindingsTracking(this);
            }

            // IComponentConnector

            public void Connect(int connectionId, global::System.Object target)
            {
                switch(connectionId)
                {
                    case 1:
                        this.obj1 = new global::System.WeakReference((global::Windows.UI.Xaml.Controls.ContentDialog)target);
                        break;
                    case 4:
                        this.obj4 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 5:
                        this.obj5 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 6:
                        this.obj6 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 7:
                        this.obj7 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 8:
                        this.obj8 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 9:
                        this.obj9 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 10:
                        this.obj10 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 11:
                        this.obj11 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 12:
                        this.obj12 = (global::Windows.UI.Xaml.Controls.TextBlock)target;
                        break;
                    case 13:
                        this.obj13 = (global::Windows.UI.Xaml.Controls.CheckBox)target;
                        break;
                    default:
                        break;
                }
            }

            // ISettingsDialog_Bindings

            public void Initialize()
            {
                if (!this.initialized)
                {
                    this.Update();
                }
            }
            
            public void Update()
            {
                this.Update_(this.dataRoot, NOT_PHASED);
                this.initialized = true;
            }

            public void StopTracking()
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.initialized = false;
            }

            // SettingsDialog_obj1_Bindings

            public void SetDataRoot(global::KnoWhy.UWP.SettingsDialog newDataRoot)
            {
                this.bindingsTracking.ReleaseAllListeners();
                this.dataRoot = newDataRoot;
            }

            public void Loading(global::Windows.UI.Xaml.FrameworkElement src, object data)
            {
                this.Initialize();
            }

            // Update methods for each path node used in binding steps.
            private void Update_(global::KnoWhy.UWP.SettingsDialog obj, int phase)
            {
                this.bindingsTracking.UpdateChildListeners_(obj);
                if (obj != null)
                {
                    if ((phase & (NOT_PHASED | DATA_CHANGED | (1 << 0))) != 0)
                    {
                        this.Update_doneLabel(obj.doneLabel, phase);
                        this.Update_title(obj.title, phase);
                        this.Update_fullReset(obj.fullReset, phase);
                        this.Update_fullResetLabel(obj.fullResetLabel, phase);
                        this.Update_reset(obj.reset, phase);
                        this.Update_resetLabel(obj.resetLabel, phase);
                        this.Update_buildLabel(obj.buildLabel, phase);
                        this.Update_build(obj.build, phase);
                        this.Update_versionLabel(obj.versionLabel, phase);
                        this.Update_version(obj.version, phase);
                        this.Update_onlyWiFiLabel(obj.onlyWiFiLabel, phase);
                        this.Update_onlyWiFi(obj.onlyWiFi, phase);
                    }
                }
            }
            private void Update_doneLabel(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentDialog_PrimaryButtonText(this.obj1.Target as global::Windows.UI.Xaml.Controls.ContentDialog, obj, null);
                }
            }
            private void Update_title(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_ContentDialog_Title(this.obj1.Target as global::Windows.UI.Xaml.Controls.ContentDialog, obj, null);
                }
            }
            private void Update_fullReset(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj4, obj, null);
                }
            }
            private void Update_fullResetLabel(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj5, obj, null);
                }
            }
            private void Update_reset(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj6, obj, null);
                }
            }
            private void Update_resetLabel(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj7, obj, null);
                }
            }
            private void Update_buildLabel(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj8, obj, null);
                }
            }
            private void Update_build(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj9, obj, null);
                }
            }
            private void Update_versionLabel(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj10, obj, null);
                }
            }
            private void Update_version(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj11, obj, null);
                }
            }
            private void Update_onlyWiFiLabel(global::System.String obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_TextBlock_Text(this.obj12, obj, null);
                }
            }
            private void Update_onlyWiFi(global::System.Nullable<global::System.Boolean> obj, int phase)
            {
                if((phase & ((1 << 0) | NOT_PHASED | DATA_CHANGED)) != 0)
                {
                    XamlBindingSetters.Set_Windows_UI_Xaml_Controls_Primitives_ToggleButton_IsChecked(this.obj13, obj, null);
                }
            }

            private class SettingsDialog_obj1_BindingsTracking
            {
                global::System.WeakReference<SettingsDialog_obj1_Bindings> WeakRefToBindingObj; 

                public SettingsDialog_obj1_BindingsTracking(SettingsDialog_obj1_Bindings obj)
                {
                    WeakRefToBindingObj = new global::System.WeakReference<SettingsDialog_obj1_Bindings>(obj);
                }

                public void ReleaseAllListeners()
                {
                    UpdateChildListeners_(null);
                }

                public void PropertyChanged_(object sender, global::System.ComponentModel.PropertyChangedEventArgs e)
                {
                    SettingsDialog_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        string propName = e.PropertyName;
                        global::KnoWhy.UWP.SettingsDialog obj = sender as global::KnoWhy.UWP.SettingsDialog;
                        if (global::System.String.IsNullOrEmpty(propName))
                        {
                            if (obj != null)
                            {
                                    bindings.Update_doneLabel(obj.doneLabel, DATA_CHANGED);
                                    bindings.Update_title(obj.title, DATA_CHANGED);
                                    bindings.Update_fullReset(obj.fullReset, DATA_CHANGED);
                                    bindings.Update_fullResetLabel(obj.fullResetLabel, DATA_CHANGED);
                                    bindings.Update_reset(obj.reset, DATA_CHANGED);
                                    bindings.Update_resetLabel(obj.resetLabel, DATA_CHANGED);
                                    bindings.Update_buildLabel(obj.buildLabel, DATA_CHANGED);
                                    bindings.Update_build(obj.build, DATA_CHANGED);
                                    bindings.Update_versionLabel(obj.versionLabel, DATA_CHANGED);
                                    bindings.Update_version(obj.version, DATA_CHANGED);
                                    bindings.Update_onlyWiFiLabel(obj.onlyWiFiLabel, DATA_CHANGED);
                                    bindings.Update_onlyWiFi(obj.onlyWiFi, DATA_CHANGED);
                            }
                        }
                        else
                        {
                            switch (propName)
                            {
                                case "doneLabel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_doneLabel(obj.doneLabel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "title":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_title(obj.title, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "fullReset":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_fullReset(obj.fullReset, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "fullResetLabel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_fullResetLabel(obj.fullResetLabel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "reset":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_reset(obj.reset, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "resetLabel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_resetLabel(obj.resetLabel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "buildLabel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_buildLabel(obj.buildLabel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "build":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_build(obj.build, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "versionLabel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_versionLabel(obj.versionLabel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "version":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_version(obj.version, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "onlyWiFiLabel":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_onlyWiFiLabel(obj.onlyWiFiLabel, DATA_CHANGED);
                                    }
                                    break;
                                }
                                case "onlyWiFi":
                                {
                                    if (obj != null)
                                    {
                                        bindings.Update_onlyWiFi(obj.onlyWiFi, DATA_CHANGED);
                                    }
                                    break;
                                }
                                default:
                                    break;
                            }
                        }
                    }
                }
                public void UpdateChildListeners_(global::KnoWhy.UWP.SettingsDialog obj)
                {
                    SettingsDialog_obj1_Bindings bindings;
                    if(WeakRefToBindingObj.TryGetTarget(out bindings))
                    {
                        if (bindings.dataRoot != null)
                        {
                            ((global::System.ComponentModel.INotifyPropertyChanged)bindings.dataRoot).PropertyChanged -= PropertyChanged_;
                        }
                        if (obj != null)
                        {
                            bindings.dataRoot = obj;
                            ((global::System.ComponentModel.INotifyPropertyChanged)obj).PropertyChanged += PropertyChanged_;
                        }
                    }
                }
            }
        }
        /// <summary>
        /// Connect()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public void Connect(int connectionId, object target)
        {
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.ContentDialog element1 = (global::Windows.UI.Xaml.Controls.ContentDialog)(target);
                    #line 10 "..\..\..\SettingsDialog.xaml"
                    ((global::Windows.UI.Xaml.Controls.ContentDialog)element1).PrimaryButtonClick += this.ContentDialog_PrimaryButtonClick;
                    #line default
                }
                break;
            case 2:
                {
                    this.resetContent = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 86 "..\..\..\SettingsDialog.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.resetContent).Click += this.resetContent_Click;
                    #line default
                }
                break;
            case 3:
                {
                    this.resetDatabase = (global::Windows.UI.Xaml.Controls.Button)(target);
                    #line 101 "..\..\..\SettingsDialog.xaml"
                    ((global::Windows.UI.Xaml.Controls.Button)this.resetDatabase).Click += this.resetDatabase_Click;
                    #line default
                }
                break;
            case 13:
                {
                    this.checkbox = (global::Windows.UI.Xaml.Controls.CheckBox)(target);
                    #line 56 "..\..\..\SettingsDialog.xaml"
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.checkbox).Checked += this.CheckBox_Checked;
                    #line 56 "..\..\..\SettingsDialog.xaml"
                    ((global::Windows.UI.Xaml.Controls.CheckBox)this.checkbox).Unchecked += this.CheckBox_Unchecked;
                    #line default
                }
                break;
            default:
                break;
            }
            this._contentLoaded = true;
        }

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IComponentConnector GetBindingConnector(int connectionId, object target)
        {
            global::Windows.UI.Xaml.Markup.IComponentConnector returnValue = null;
            switch(connectionId)
            {
            case 1:
                {
                    global::Windows.UI.Xaml.Controls.ContentDialog element1 = (global::Windows.UI.Xaml.Controls.ContentDialog)target;
                    SettingsDialog_obj1_Bindings bindings = new SettingsDialog_obj1_Bindings();
                    returnValue = bindings;
                    bindings.SetDataRoot(this);
                    this.Bindings = bindings;
                    element1.Loading += bindings.Loading;
                }
                break;
            }
            return returnValue;
        }
    }
}

